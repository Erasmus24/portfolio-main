.portfolio__categories {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
}

.btn.cat__btn {
    text-transform: capitalize;
    transition: var(--transition);
}

.btn.cat__btn:hover {
    transform: translateY(0);
}

.portfolio__projects {
    margin-top: 3rem;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 3rem;
    align-items: start;
}

.card.portfolio__project {
    animation: animateProject 800ms ease-in forwards;
}

@keyframes animateProject {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.portfolio__project-image {
    position: relative; /* Positioning context for .front-title */
    width: 100%;
    height: 100%;
    min-height: 7rem;
    max-height: 300px;
    background: var(--color-light);
    border-radius: var(--border-radius-2);
    margin-bottom: 1.5rem;
    object-fit: cover;
    overflow: hidden;
}

.front-title {
    position: absolute;
    top: 10px; /* Adjust as needed */
    left: 10px;
    color: white;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 0.5rem;
    z-index: 2;
    border-radius: var(--border-radius-2);
}

.portfolio__project p {
    margin: 0.5rem 0 2rem;
}

.portfolio__project-cta {
    display: flex;
    gap: 1rem;
}

.portfolio__project:hover .btn.sm {
    border-color: var(--color-white);
}

.portfolio__project:hover .btn.sm.primary {
    background: transparent;
    color: var(--color-primary);
    border-color: var(--color-primary);
}

/* MEDIA QUERIES (tablets) */
@media screen and (max-width: 1024px) {
    .portfolio__projects {
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }
}

/* MEDIA QUERIES (phones) */
@media screen and (max-width: 600px) {
    .portfolio__categories {
        gap: 0.6rem;
    }

    .btn.cat__btn {
        padding: 0.7rem 0.8rem;
    }

    .portfolio__projects {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    .flip-card {
        width: 100%; /* Make flip-card responsive */
        height: auto;
    }

    .flip-card-inner {
        height: 100%;
    }
}

.flip-card {
    background-color: transparent;
    width: 300px;
    height: 300px;
    perspective: 1000px;
}

.flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.6s;
    transform-style: preserve-3d;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
    border-radius: var(--border-radius-2);
}

.flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
}

.flip-card-front,
.flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: var(--border-radius-2);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.flip-card-front {
    background-color: #bbb;
    color: black;
    border: 1px solid var(--color-primary);
    border-radius: var(--border-radius-2);
}

.flip-card-back {
    background: var(--color-primary);
    color: white;
    transform: rotateY(180deg);
    display: flex; /* Use flexbox to align items */
    flex-direction: column; /* Stack items vertically */
    justify-content: space-between; /* Space between title, desc, and button */
    padding: 1rem; /* Add padding for better spacing */
    text-align: left;
    border-radius: var(--border-radius-2); /* Ensure border radius matches front */
}

.flip-card-back h3 {
    margin: 0; /* Remove default margin */
}

.flip-card-back p {
    flex-grow: 1; /* Allow paragraph to take available space */
    margin: 0.5rem 0 1rem; /* Adjust margins as needed */
}

.view-button {
    align-self: flex-end; /* Align button to the right */
    padding: 0.5rem 1rem; /* Add padding for the button */
    text-transform: uppercase; /* Capitalize button text */
    background-color: var(--color-primary); /* Set button background color */
    color: white; /* Set button text color */
    border: none; /* Remove border */
    border-radius: var(--border-radius-2); /* Add border radius */
    transition: background-color 0.3s, color 0.3s, box-shadow 0.3s; /* Smooth transition */
    cursor: pointer; /* Show pointer cursor on hover */
}

.view-button:hover {
    background-color: #0056b3; /* Manually set a darker shade */
    color: var(--color-light); /* Optional: change text color */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Optional: Add a shadow effect on hover */
}
